{
    "swagger": "2.0",
    "info": {
        "description": "Server documentation to query comics from the DB.",
        "title": "Comics API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Estebmaister",
            "url": "http://www.github.com/estebmaister",
            "email": "estebmaister@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/public/login": {
            "post": {
                "description": "Login a user with basic credentials to receive an auth 'token' in the headers if successful",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User login"
                ],
                "summary": "Login user",
                "operationId": "user-login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Login user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "no ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/register": {
            "post": {
                "description": "Function for registering a new user (for demonstration purposes), receive a condirmation for success or failure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User register"
                ],
                "summary": "Register new user",
                "operationId": "user-register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "registered",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "not registered",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "404": {
                        "description": "not registered",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.UserLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}